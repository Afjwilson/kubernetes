---
apiVersion: v1
kind: Service
metadata:
  name: conjur-follower
  labels:
    app: conjur-follower
spec:
  ports:
  - port: 443
    name: https
  - port: 5432
    name: pg-main
  - port: 5433
    name: pg-audit
  selector:
    app: conjur-follower
    cluster-id: dev
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: conjur-follower
  labels:
    app: conjur-follower
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: conjur-follower
    spec:
      containers:
      - name: conjur-follower
        image: conjur-appliance:local
        ports:
        - containerPort: 443
          name: https
        - containerPort: 5432
          name: pg-main
        - containerPort: 5433
          name: pg-audit
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp /shared/follower-seed.tar /tmp; evoke unpack seed /tmp/follower-seed.tar; cp /shared/conjur.json /etc"]
#              command: ["/bin/sh", "-c", "evoke configure follower -j /etc/conjur.json"]
        volumeMounts:
        - name: shared-data
          mountPath: /shared
          
      volumes:
      - name: shared-data
        emptyDir: {}
      - name: launch-dir
        hostPath:
          path: /Users/josephhunt/Conjur/scalability-k8s/conjur-service

# it seems like a bad idea to have a mount a host volume in every 
# container, esp. in a multi-node environment. So the init container 
# mounts the host volume and copies the seed file into a shared volume. 
# Unpacking a seed file destroys the tarfile so every follower needs 
# its own. So the postStart hook above copies the seed file into the 
# container from the shared volume and unpacks it.
      initContainers:
      - name: init-followers
        image: conjur-cli:local
        command: ["/bin/sh", "-c", "cp /host-mount/follower-seed.tar /shared; cp /host-mount/conjur.json /shared"]
        volumeMounts:
        - name: shared-data
          mountPath: /shared
        - name: launch-dir
          mountPath: /host-mount
